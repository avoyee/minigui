--------------------
./configure --prefix=/home/yongliang.li/test/gui/library --exec-prefix=/home/yongliang.li/test/gui/library
Wed Jun  5 16:04:17 HKT 2019
unknown option: --exec-prefix=/home/yongliang.li/test/gui/library
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure --help
Wed Jun  5 16:04:54 HKT 2019
usage:
  configure [--const] [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure --prefix=/home/yongliang.li/test/gui/library --exec-prefix=/home/yongliang.li/test/gui/library
Wed Jun  5 16:05:05 HKT 2019
unknown option: --exec-prefix=/home/yongliang.li/test/gui/library
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure --prefix=/home/yongliang.li/test/gui/library --exec-prefix=/home/yongliang.li/test/gui/library
Wed Jun  5 16:06:01 HKT 2019
unknown option: --exec-prefix=/home/yongliang.li/test/gui/library
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure --prefix=/home/yongliang.li/test/gui/library --eprefix=/home/yongliang.li/test/gui/library
Wed Jun  5 16:06:40 HKT 2019
=== ztest121528.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -c ztest121528.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest121528.c ===
int foo() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 ztest121528.c

Checking for shared library support...
=== ztest121528.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -w -c -O3 -fPIC ztest121528.c
arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest121528.so ztest121528.o
Building shared library libz.so.1.2.11 with arm-linux-gnueabihf-gcc.

=== ztest121528.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 ztest121528.c
Checking for size_t... Yes.


=== ztest121528.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest121528.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest121528.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest121528 ztest121528.c
Checking for strerror... Yes.

=== ztest121528.c ===
#include <unistd.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest121528.c
Checking for unistd.h... Yes.

=== ztest121528.c ===
#include <stdarg.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest121528.c
Checking for stdarg.h... Yes.

=== ztest121528.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest121528.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest121528.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest121528 ztest121528.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest121528.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest121528.c
Checking for return value of vsnprintf()... Yes.

=== ztest121528.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest121528.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = arm-linux-gnueabihf-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = arm-linux-gnueabihf-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = /home/yongliang.li/test/gui/library
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/yongliang.li/test/gui/library
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/yongliang.li/test/gui/library --eprefix=/home/yongliang.li/test/gui/library
Tue Jun 11 19:45:28 HKT 2019
=== ztest26855.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -c ztest26855.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26855.c ===
int foo() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 ztest26855.c

Checking for shared library support...
=== ztest26855.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -w -c -O3 -fPIC ztest26855.c
arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26855.so ztest26855.o
Building shared library libz.so.1.2.11 with arm-linux-gnueabihf-gcc.

=== ztest26855.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 ztest26855.c
Checking for size_t... Yes.


=== ztest26855.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26855.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26855.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26855 ztest26855.c
Checking for strerror... Yes.

=== ztest26855.c ===
#include <unistd.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26855.c
Checking for unistd.h... Yes.

=== ztest26855.c ===
#include <stdarg.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26855.c
Checking for stdarg.h... Yes.

=== ztest26855.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26855.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26855.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26855 ztest26855.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26855.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26855.c
Checking for return value of vsnprintf()... Yes.

=== ztest26855.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26855.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = arm-linux-gnueabihf-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = arm-linux-gnueabihf-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = /home/yongliang.li/test/gui/library
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/yongliang.li/test/gui/library
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/yongliang.li/test/gui/library --eprefix=/home/yongliang.li/test/gui/library
Tue Jun 11 20:20:16 HKT 2019
=== ztest108256.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -c ztest108256.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest108256.c ===
int foo() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 ztest108256.c

Checking for shared library support...
=== ztest108256.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -w -c -O3 -fPIC ztest108256.c
arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest108256.so ztest108256.o
Building shared library libz.so.1.2.11 with arm-linux-gnueabihf-gcc.

=== ztest108256.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 ztest108256.c
Checking for size_t... Yes.


=== ztest108256.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108256.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest108256.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest108256 ztest108256.c
Checking for strerror... Yes.

=== ztest108256.c ===
#include <unistd.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108256.c
Checking for unistd.h... Yes.

=== ztest108256.c ===
#include <stdarg.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108256.c
Checking for stdarg.h... Yes.

=== ztest108256.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108256.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest108256.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest108256 ztest108256.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest108256.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108256.c
Checking for return value of vsnprintf()... Yes.

=== ztest108256.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest108256.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = arm-linux-gnueabihf-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = arm-linux-gnueabihf-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = /home/yongliang.li/test/gui/library
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/yongliang.li/test/gui/library
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/yongliang.li/test/gui/library --eprefix=/home/yongliang.li/test/gui/library
Tue Jun 11 20:21:26 HKT 2019
=== ztest116531.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -c ztest116531.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest116531.c ===
int foo() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 ztest116531.c

Checking for shared library support...
=== ztest116531.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -w -c -O3 -fPIC ztest116531.c
arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest116531.so ztest116531.o
Building shared library libz.so.1.2.11 with arm-linux-gnueabihf-gcc.

=== ztest116531.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 ztest116531.c
Checking for size_t... Yes.


=== ztest116531.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest116531.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest116531.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest116531 ztest116531.c
Checking for strerror... Yes.

=== ztest116531.c ===
#include <unistd.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest116531.c
Checking for unistd.h... Yes.

=== ztest116531.c ===
#include <stdarg.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest116531.c
Checking for stdarg.h... Yes.

=== ztest116531.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest116531.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest116531.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest116531 ztest116531.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest116531.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest116531.c
Checking for return value of vsnprintf()... Yes.

=== ztest116531.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest116531.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = arm-linux-gnueabihf-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = arm-linux-gnueabihf-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = /home/yongliang.li/test/gui/library
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/yongliang.li/test/gui/library
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/yongliang.li/test/gui/library --eprefix=/home/yongliang.li/test/gui/library
Wed Jun 12 15:29:17 HKT 2019
=== ztest27707.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -c ztest27707.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27707.c ===
int foo() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 ztest27707.c

Checking for shared library support...
=== ztest27707.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -w -c -O3 -fPIC ztest27707.c
arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27707.so ztest27707.o
Building shared library libz.so.1.2.11 with arm-linux-gnueabihf-gcc.

=== ztest27707.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 ztest27707.c
Checking for size_t... Yes.


=== ztest27707.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27707.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27707.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27707 ztest27707.c
Checking for strerror... Yes.

=== ztest27707.c ===
#include <unistd.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27707.c
Checking for unistd.h... Yes.

=== ztest27707.c ===
#include <stdarg.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27707.c
Checking for stdarg.h... Yes.

=== ztest27707.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27707.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27707.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27707 ztest27707.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27707.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27707.c
Checking for return value of vsnprintf()... Yes.

=== ztest27707.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27707.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = arm-linux-gnueabihf-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = arm-linux-gnueabihf-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = /home/yongliang.li/test/gui/library
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/yongliang.li/test/gui/library
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/yongliang.li/test/gui/library --eprefix=/home/yongliang.li/test/gui/library
Fri Jun 14 14:33:33 HKT 2019
=== ztest120607.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -c ztest120607.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest120607.c ===
int foo() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 ztest120607.c

Checking for shared library support...
=== ztest120607.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-linux-gnueabihf-gcc -w -c -O3 -fPIC ztest120607.c
arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest120607.so ztest120607.o
Building shared library libz.so.1.2.11 with arm-linux-gnueabihf-gcc.

=== ztest120607.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 ztest120607.c
Checking for size_t... Yes.


=== ztest120607.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest120607.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest120607.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest120607 ztest120607.c
Checking for strerror... Yes.

=== ztest120607.c ===
#include <unistd.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest120607.c
Checking for unistd.h... Yes.

=== ztest120607.c ===
#include <stdarg.h>
int main() { return 0; }
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest120607.c
Checking for stdarg.h... Yes.

=== ztest120607.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest120607.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest120607.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest120607 ztest120607.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest120607.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest120607.c
Checking for return value of vsnprintf()... Yes.

=== ztest120607.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
arm-linux-gnueabihf-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest120607.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = arm-linux-gnueabihf-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = arm-linux-gnueabihf-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = arm-linux-gnueabihf-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = /home/yongliang.li/test/gui/library
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/yongliang.li/test/gui/library
sharedlibdir = ${libdir}
uname = Linux
--------------------


